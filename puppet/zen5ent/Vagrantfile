$script = <<SCRIPT
   if [ -f /usr/sbin/VBoxService ]
   then
      sed -i '/nameserver/c\\nameserver 8.8.8.8' /etc/resolv.conf
      echo "127.0.0.1 localhost" > /etc/hosts
      echo "172.28.128.10 zen5" >> /etc/hosts
      ln -s /dev/sdb /dev/sdb1
      ln -s /dev/sdc /dev/sdc1
   else
      ln -s /dev/xvdb /dev/sdb1
      ln -s /dev/xvdc /dev/sdc1
   fi
   if [ ! -f /usr/bin/puppet ]
   then
      cd /var/tmp
      wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb
      dpkg -i puppetlabs-release-trusty.deb
      apt-get update
      apt-get -y install puppet
      puppet module install puppetlabs/stdlib
   fi
SCRIPT

Vagrant.configure(2) do |config|
   config.vm.box = "puppetlabs/ubuntu-14.04-64-nocm"
   config.vm.hostname = "zen5"

   # Local instance
   #
   config.vm.provider :virtualbox do |vb, override|
      override.vm.network :private_network, ip: "172.28.128.10"
      vb.gui = true
      vb.memory = "12288"
      unless File.exists?('../disk3.vdi')
         vb.customize ['createhd', '--filename',"../disk3",
                       '--format', 'VDI', '--size', 20 * 1024 ]
      end
      vb.customize [ 'storageattach', :id, '--storagectl', 'IDE Controller',
           '--port', 1, '--device', 0, '--type', 'hdd',
           '--medium', "../disk3.vdi" ]
      unless File.exists?('../disk4.vdi')
         vb.customize ['createhd', '--filename',"../disk4",
                       '--format', 'VDI', '--size', 20 * 1024 ]
      end
      vb.customize [ 'storageattach', :id, '--storagectl', 'IDE Controller',
           '--port', 0, '--device', 1, '--type', 'hdd',
           '--medium', "../disk4.vdi" ]
   end

   # AWS instance
   #
   config.vm.provider :aws do |aws, override|
      override.vm.box = "ubuntu_aws"
      override.ssh.username = "ubuntu"
      aws.keypair_name = "centos_sr"
      aws.security_groups = ['zenoss']

      # aws.ami = "ami-bc8131d4"
      # aws.instance_type = "m1.large"
      aws.ami = "ami-4c7a3924"
      aws.instance_type = "m2.xlarge"
      override.ssh.private_key_path = "~/.ssh/centos_sr.pem"

      aws.block_device_mapping = [{
         'DeviceName' => '/dev/sdb',
         'Ebs.VolumeSize' => 32,
         'Ebs.VolumeType' => 'gp2',
         'Ebs.DeleteOnTermination' => 'true' },

         { 'DeviceName' => '/dev/sdc',
         'Ebs.VolumeSize' => 32,
         'Ebs.VolumeType' => 'gp2',
         'Ebs.DeleteOnTermination' => 'true' }]

      aws.tags = {
         'Name' => 'ZenOSS 5.0.8 Core',
      }
   end
   config.vm.synced_folder ".", "/vagrant", id: "vagrant-root"
   config.vm.provision "shell", inline: $script
   config.vm.provision "puppet" do |puppet|
      puppet.manifest_file  = "default.pp"
      # puppet.manifests_path = "manifests"
   end
end

